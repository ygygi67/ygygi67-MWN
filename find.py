#!/usr/bin/env python3
"""
‡∏≠‡πà‡∏≤‡∏ô Google Sheet ‡πÅ‡∏ö‡∏ö public ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ service account
‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á pandas ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
    pip install pandas requests

‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:
    python find.py --sheet <Google Sheet URL> [‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤]
    ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
"""

import argparse
import pandas as pd
import requests
import sys
import os
import re
import time
import threading
from google.oauth2.service_account import Credentials
import gspread

# Configuration
SPREADSHEET_ID_OR_URL = "1RoG2P3JaDOYwdbbEQllJZPt3H8lHv0o2LOMP8f9I1ac"
SHEET_NAME = "Sheet1"

def typewriter_print(text, delay=0.05):
    """‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö typewriter effect"""
    for char in text:
        print(char, end='', flush=True)
        time.sleep(delay)
    print()

def loading_animation(duration=7):
    """‡πÅ‡∏™‡∏î‡∏á loading animation"""
    frames = ["‚†ã", "‚†ô", "‚†π", "‚†∏", "‚†º", "‚†¥", "‚†¶", "‚†ß", "‚†á", "‚†è"]
    messages = [
        "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
        "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
        "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
        "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
    ]
    
    start_time = time.time()
    frame_index = 0
    message_index = 0
    
    while time.time() - start_time < duration:
        elapsed = time.time() - start_time
        
        # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤
        if elapsed < 2:
            current_message = messages[0]
        elif elapsed < 4:
            current_message = messages[1]
        elif elapsed < 6:
            current_message = messages[2]
        else:
            current_message = messages[3]
        
        print(f"\r{frames[frame_index]} {current_message}...", end='', flush=True)
        frame_index = (frame_index + 1) % len(frames)
        time.sleep(0.1)
    
    print(f"\r‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!" + " " * 50)
    time.sleep(0.5)

def sheet_url_to_csv(sheet_url):
    m = re.search(r'/d/([a-zA-Z0-9-_]+)', sheet_url)
    if m:
        sheet_id = m.group(1)
    else:
        sheet_id = sheet_url
    return f"https://docs.google.com/spreadsheets/d/{sheet_id}/export?format=csv"

def display_student_info(row_data, columns):
    """‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î"""
    code_col = None
    for col in columns:
        if any(keyword in col.lower() for keyword in ['id', 'code', '‡∏£‡∏´‡∏±‡∏™', '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà']):
            code_col = col
            break
    code_value = ""
    if code_col:
        code_value = str(row_data[code_col]) if pd.notna(row_data[code_col]) else ""

    # ‡∏ñ‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏õ‡πá‡∏ô NO ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢
    if code_col and code_value.strip().upper() == "NO":
        return

    # ‡∏´‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ä‡∏∑‡πà‡∏≠
    name_value = ""
    for col in columns:
        if any(keyword in col.lower() for keyword in ['name', '‡∏ä‡∏∑‡πà‡∏≠', '‡∏ô‡∏≤‡∏°']):
            name_value = str(row_data[col]) if pd.notna(row_data[col]) else "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"
            break

    print(f"‡∏ä‡∏∑‡πà‡∏≠ : {name_value}")
    if code_col:
        print(f"‡∏£‡∏´‡∏±‡∏™ : {code_value}")

def search_data(df, query):
    """‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô DataFrame"""
    if query.lower() in ['all', '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', 'all data', 'show all']:
        return df
    
    query_norm = str(query).strip().lower()
    results = []
    
    for idx, row in df.iterrows():
        if any(query_norm in str(val).lower() for val in row if pd.notna(val)):
            results.append(row)
    
    if results:
        return pd.DataFrame(results)
    else:
        return pd.DataFrame()

def main():
    # ‡πÅ‡∏™‡∏î‡∏á header
    print("\n" + "="*60)
    typewriter_print("üîç ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏´‡∏±‡∏™", 0.08)
    print("="*60)
    
    # ‡πÇ‡∏´‡∏•‡∏î loading animation
    loading_animation(7)
    
    # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    sheet_url = SPREADSHEET_ID_OR_URL
    csv_url = sheet_url_to_csv(sheet_url)
    
    try:
        df = pd.read_csv(csv_url)
        typewriter_print("üìä ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", 0.05)
    except Exception as e:
        typewriter_print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", 0.03)
        typewriter_print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Google Sheet ‡πÄ‡∏õ‡∏¥‡∏î public ‡πÅ‡∏•‡πâ‡∏ß", 0.03)
        sys.exit(1)
    
    time.sleep(1)
    
    # Loop ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á
    while True:
        print("\n" + "-"*40)
        typewriter_print("üí° ‡∏ó‡∏≥‡πÇ‡∏î‡∏¢ ygygi6 ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÅ‡∏ö‡∏ö‡∏´‡∏ô‡∏±‡∏Å ‡πÜ ‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏∞‡∏à‡πâ‡∏∞", 0.02)
        typewriter_print("          ‡∏Å‡∏î Ctrl+C ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°", 0.02)
        print("-"*40)
        
        try:
            query = input("\nüîé ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: ").strip()
            
            if not query:
                typewriter_print("‚ö†Ô∏è  ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤", 0.03)
                continue
            
            # ‡πÅ‡∏™‡∏î‡∏á searching animation
            search_frames = ["üîç", "üîé", "üîç", "üîé"]
            for i in range(8):
                print(f"\r{search_frames[i % len(search_frames)]} ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...", end='', flush=True)
                time.sleep(0.2)
            print("\r" + " "*20 + "\r", end='')
            
            results = search_data(df, query)

            if len(results) > 0:
                if query.lower() in ['all', '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', 'all data', 'show all']:
                    typewriter_print("="*60, 0.002)
                    for idx, row in results.iterrows():
                        # ‡πÅ‡∏™‡∏î‡∏á searching animation ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                        for i in range(4):
                            print(f"\rüîé ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...", end='', flush=True)
                            time.sleep(0.1)
                        print("\r" + " "*20 + "\r", end='')
                        display_student_info(row, df.columns)
                    typewriter_print("="*60, 0.002)
                else:
                    if len(results) == 1:
                        typewriter_print("‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô!", 0.03)
                        time.sleep(0.5)
                        display_student_info(results.iloc[0], df.columns)
                    else:
                        typewriter_print(f"‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô {len(results)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:", 0.03)
                        typewriter_print("="*60, 0.002)
                        time.sleep(0.5)
                        for idx, row in results.iterrows():
                            # ‡∏ñ‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏õ‡πá‡∏ô NO ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢
                            code_col = None
                            for col in df.columns:
                                if any(keyword in col.lower() for keyword in ['id', 'code', '‡∏£‡∏´‡∏±‡∏™', '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà']):
                                    code_col = col
                                    break
                            code_value = str(row[code_col]) if code_col and pd.notna(row[code_col]) else ""
                            if code_value.strip().upper() == "NO":
                                continue
                            display_student_info(row, df.columns)
                        typewriter_print("="*60, 0.002)
            else:
                typewriter_print("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏µ‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", 0.04)
            
            time.sleep(1)
            
        except KeyboardInterrupt:
            print("\n")
            typewriter_print("üëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£!", 0.05)
            typewriter_print("üö™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°...", 0.05)
            time.sleep(1)
            break
        except Exception as e:
            typewriter_print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", 0.03)
            time.sleep(1)

if __name__ == "__main__":
    main()